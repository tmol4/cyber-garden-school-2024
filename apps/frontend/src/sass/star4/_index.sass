@use "sass:map"
@use "sass:list"
@use "./layout"
@use "./typescale"
@use "./color"
@use "./motion"
@use "./shape"

@function color($role)
  $values: color.values()
  @if list.index($values, $role) == null
    @error "Property \"role\" must be one of the following: #{$values}"
  @return var(--star4-color-#{$role})

@function easing($easing)
  $values: motion.values-easing()
  @if list.index($values, $easing) == null
    @error "Property \"easing\" must be one of the following: #{$values}"
  @return var(--star4-motion-easing-#{$easing})

@function duration($duration)
  $values: motion.values-duration()
  @if list.index($values, $duration) == null
    @error "Property \"duration\" must be one of the following: #{$values}"
  @return var(--star4-motion-duration-#{$duration})

@function shape($corner)
  $values: shape.values-corner()
  @if list.index($values, $corner) == null
    @error "Property \"corner\" must be one of the following: #{$values}"
  @return var(--star4-shape-corner-#{$corner})

@mixin typescale($scale, $size)
  $values-scale: typescale.values()
  @if not map.has-key($values-scale, $scale)
    @error "Property \"scale\" must be one of the following: #{map.keys($values-scale)}"
  $values-size: map.get($values-scale, $scale)
  @if not map.has-key($values-size, $size)
    @error "Property \"size\" must be one of the following: #{map.keys($values-size)}"
  $typescale: map.get($values-size, $size)

  font-family: var(--star4-typescale-#{$typescale}-font-family)
  font-size: var(--star4-typescale-#{$typescale}-font-size)
  font-weight: var(--star4-typescale-#{$typescale}-font-weight)
  line-height: var(--star4-typescale-#{$typescale}-line-height)
  letter-spacing: var(--star4-typescale-#{$typescale}-letter-spacing)



@mixin layout($from, $to)
  $values-min: layout.values-min()
  $values-max: layout.values-max()

  @if not map.has-key($values-min, $from)
    @error "Property \"from\" must be one of the following: #{map.keys($values-min)}."
  @if not map.has-key($values-max, $to)
    @error "Property \"to\" must be one of the following: #{map.keys($values-max)}."

  $min-width: map.get($values-min, $from)
  $max-width: map.get($values-max, $to)

  @if $min-width == null
    @media only screen and (max-width: $max-width)
      @content
  @else if $max-width == null
    @media only screen and (min-width: $min-width)
      @content
  @else
    @media only screen and (min-width: $min-width) and (max-width: $max-width)
      @content



